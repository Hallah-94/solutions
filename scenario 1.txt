Question / Scenario

A large package can hold five items, while the small package can hold only one item. The available number of both large and small packages is limited. All items must be placed in packages and used packages have to be filled up completely.

Write a function that calculates the minimum number of packages needed to hold a given number of items. If it not possible to meet the requirements, return -1.

For example, if we have 16 items, 2 large and 10 small packages, the function should return 8 (2 large packages + 6 small packages)


using System;

namespace RealTest
{
    public static class Shipping
    {
        public static int MinimalNumberOfPackages(int items, int availableLargePackages, int availableSmallPackages)
        {
           if(availableLargePackages*5+availableSmallPackages<items){
			 return -1;   
		   }
			else{
				int packages=0;
				for(int i=availableLargePackages; i>=1;i--){
					if(i*5<=items){
						packages=i;
						break;
					}
				}
				if(packages==0){
					return 1;
				}
				else{
				packages+=items-(availableLargePackages*5);
				return packages;
				}
			}
			
        }

        public static void Main(string[] args)
        {
            Console.WriteLine(Shipping.MinimalNumberOfPackages(3, 2, 10));
        }
    }
}